print(adf_test)
spesa_diff <- diff(spesa_ts)
arima_model <- auto.arima(spesa_diff)
summary(arima_model)
forecast_2023 <- forecast(arima_model, h = 1)
plot(forecast_2023, main = "Differences series of health expenditure (% GDP)", ylab = "Difference % PIL", xlab = "Anno")
# 2023 predicted
forecast_2023$mean
# Italy Filters
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
# Time series creation
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
# Arima model
arima_model <- auto.arima(spesa_ts)
summary(arima_model)
# 2023 Prediction
forecast_2023 <- forecast(arima_model, h = 1)
# Plot
plot(forecast_2023, main = "2023 % Health expenditure on GDP",
ylab = "Expenditure (% GDP)", xlab = "Year")
forecast_2023$mean
# üßº Supponiamo che il tuo dataframe si chiami 'df' e contenga:
# - anno: numerico (es. 2000, 2001, ...)
# - paese: carattere (es. "Italy")
# - spesa: numerico (spesa sanitaria pubblica)
# 1Ô∏è‚É£ Filtro dati per l'Italia
df_italia <- df %>%
filter(Country.Name == "Italy") %>%
arrange(Year)
# 1. Serie temporale annuale
serie_ts <- ts(df_italia$Expenditure,
start = min(df_italia$Year),
end = max(df_italia$Year),
frequency = 1)
# 2. Applico stl (solo trend + residuo, niente stagionalit√† perch√© freq = 1)
stl_italia <- stl(serie_ts, s.window = "periodic")
View(df_italy)
# 1Ô∏è‚É£ Filtro dati per l'Italia
df_italia <- df %>%
filter(Country.Name == "Italy") %>%
arrange(Year)
# 1. Serie temporale annuale
serie_ts <- ts(df_italia$Expenditure,
start = min(df_italia$Year),
end = max(df_italia$Year),
frequency = 1)
# 2. Applico stl (solo trend + residuo, niente stagionalit√† perch√© freq = 1)
stl_italia <- stl(serie_ts, s.window = "periodic")
View(df_italy)
View(df_italia)
View(df_italia)
# 1Ô∏è‚É£ Filtro per Italia, rimuovo NA, ordino
df_italia <- df %>%
filter(paese == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# 1Ô∏è‚É£ Filtro per Italia, rimuovo NA, ordino
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# 1Ô∏è‚É£ Filtro per Italia, rimuovo NA, ordino
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# 2Ô∏è‚É£ Verifica che gli anni siano continui e stampali
print(df_italia$Year)  # Devono essere 23 numeri consecutivi
# 3Ô∏è‚É£ Crea la serie temporale SOLO se gli anni sono consecutivi
if (!all(diff(df_italia$Year) == 1)) {
stop("Errore: gli anni NON sono consecutivi. STL richiede dati continui.")
}
# 4Ô∏è‚É£ Crea oggetto ts
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 1)  # annuale
# 5Ô∏è‚É£ Applica stl (trend smoothing, no vera stagionalit√† con freq = 1)
stl_italia <- stl(serie_ts, s.window = "periodic")
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# 2Ô∏è‚É£ Verifica che gli anni siano continui e stampali
print(df_italia$Year)  # Devono essere 23 numeri consecutivi
# 3Ô∏è‚É£ Crea la serie temporale SOLO se gli anni sono consecutivi
if (!all(diff(df_italia$Year) == 1)) {
stop("Errore: gli anni NON sono consecutivi. STL richiede dati continui.")
}
# 4Ô∏è‚É£ Crea oggetto ts
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 2)  # annuale
# 5Ô∏è‚É£ Applica stl (trend smoothing, no vera stagionalit√† con freq = 1)
stl_italia <- stl(serie_ts, s.window = "periodic")
# 6Ô∏è‚É£ Visualizza
plot(stl_italia, main = "STL Decomposition - Spesa Sanitaria Italia")
library(tseries)
library(forecast)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(glmnet)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
#Wide transformation
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
#ARIMA prediction
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
adf_test <- adf.test(spesa_ts)
print(adf_test)
spesa_diff <- diff(spesa_ts)
arima_model <- auto.arima(spesa_diff)
summary(arima_model)
forecast_2023 <- forecast(arima_model, h = 1)
plot(forecast_2023, main = "Differences series of health expenditure (% GDP)", ylab = "Difference % PIL", xlab = "Anno")
# 2023 predicted
forecast_2023$mean
# Italy Filters
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
# Time series creation
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
# Arima model
arima_model <- auto.arima(spesa_ts)
summary(arima_model)
# 2023 Prediction
forecast_2023 <- forecast(arima_model, h = 1)
# Plot
plot(forecast_2023, main = "2023 % Health expenditure on GDP",
ylab = "Expenditure (% GDP)", xlab = "Year")
forecast_2023$mean
library(dplyr)
library(ggplot2)
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
}
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
library(tseries)
library(forecast)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(glmnet)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
#Wide transformation
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
#ARIMA prediction
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
adf_test <- adf.test(spesa_ts)
print(adf_test)
spesa_diff <- diff(spesa_ts)
arima_model <- auto.arima(spesa_diff)
summary(arima_model)
forecast_2023 <- forecast(arima_model, h = 1)
plot(forecast_2023, main = "Differences series of health expenditure (% GDP)", ylab = "Difference % PIL", xlab = "Anno")
# 2023 predicted
forecast_2023$mean
# Italy Filters
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
# Time series creation
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
# Arima model
arima_model <- auto.arima(spesa_ts)
summary(arima_model)
# 2023 Prediction
forecast_2023 <- forecast(arima_model, h = 1)
# Plot
plot(forecast_2023, main = "2023 % Health expenditure on GDP",
ylab = "Expenditure (% GDP)", xlab = "Year")
forecast_2023$mean
library(dplyr)
library(ggplot2)
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# Create time series
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 2)  # it should be 1, but the minimum is 2
stl_italia <- stl(serie_ts, s.window = "periodic")
# Olot
plot(stl_italia, main = "STL Decomposition - Health Expenditure (Italy)")
# Selezioniamo i dati per l'Italia e ordiniamo per anno
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# Crea la serie temporale con frequenza 2 (poich√© la minima √® 2)
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 2)  # Frequenza 2 per consentire la decomposizione STL
# Applica STL per la decomposizione
stl_italia <- stl(serie_ts, s.window = "periodic")
# Estrazione dei componenti dalla decomposizione STL
trend_italia <- stl_italia$time.series[, "trend"]
seasonal_italia <- stl_italia$time.series[, "seasonal"]
remainder_italia <- stl_italia$time.series[, "remainder"]
# Creiamo un dataframe con i componenti e gli anni
df_stl_italia <- data.frame(
Year = df_italia$Year,
Data = stl_italia$time.series[, "data"],
Seasonal = seasonal_italia,
Trend = trend_italia,
Remainder = remainder_italia
)
library(tseries)
library(forecast)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(glmnet)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
#Wide transformation
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
#ARIMA prediction
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
adf_test <- adf.test(spesa_ts)
print(adf_test)
spesa_diff <- diff(spesa_ts)
arima_model <- auto.arima(spesa_diff)
summary(arima_model)
forecast_2023 <- forecast(arima_model, h = 1)
plot(forecast_2023, main = "Differences series of health expenditure (% GDP)", ylab = "Difference % PIL", xlab = "Anno")
# 2023 predicted
forecast_2023$mean
# Italy Filters
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
# Time series creation
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
# Arima model
arima_model <- auto.arima(spesa_ts)
summary(arima_model)
# 2023 Prediction
forecast_2023 <- forecast(arima_model, h = 1)
# Plot
plot(forecast_2023, main = "2023 % Health expenditure on GDP",
ylab = "Expenditure (% GDP)", xlab = "Year")
forecast_2023$mean
library(dplyr)
library(ggplot2)
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# Create time series
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 2)  # it should be 1, but the minimum is 2
stl_italia <- stl(serie_ts, s.window = "periodic")
# Plot
plot(stl_italia, main = "STL Decomposition - Health Expenditure (Italy)")
# Selezioniamo i dati per l'Italia e ordiniamo per anno
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# Crea la serie temporale con frequenza 2 (poich√© la minima √® 2)
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 2)  # Frequenza 2 per consentire la decomposizione STL
# Applica STL per la decomposizione
stl_italia <- stl(serie_ts, s.window = "periodic")
# Estrazione dei componenti dalla decomposizione STL
trend_italia <- stl_italia$time.series[, "trend"]
seasonal_italia <- stl_italia$time.series[, "seasonal"]
remainder_italia <- stl_italia$time.series[, "remainder"]
# Creiamo un dataframe con i componenti e gli anni
df_stl_italia <- data.frame(
Year = df_italia$Year,
Data = stl_italia$time.series[, "data"],
Seasonal = seasonal_italia,
Trend = trend_italia,
Remainder = remainder_italia
)
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
library(tseries)
library(forecast)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(glmnet)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
#Wide transformation
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
#ARIMA prediction
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
adf_test <- adf.test(spesa_ts)
print(adf_test)
spesa_diff <- diff(spesa_ts)
arima_model <- auto.arima(spesa_diff)
summary(arima_model)
forecast_2023 <- forecast(arima_model, h = 1)
plot(forecast_2023, main = "Differences series of health expenditure (% GDP)", ylab = "Difference % PIL", xlab = "Anno")
# 2023 predicted
forecast_2023$mean
# Italy Filters
df_italy <- df_wide %>% filter(Country.Name == "Italy")
spesa_italia <- df_italy[, as.character(2000:2022)]
spesa_italia <- as.numeric(spesa_italia)
# Time series creation
spesa_ts <- ts(spesa_italia, start = 2000, frequency = 1)
# Arima model
arima_model <- auto.arima(spesa_ts)
summary(arima_model)
# 2023 Prediction
forecast_2023 <- forecast(arima_model, h = 1)
# Plot
plot(forecast_2023, main = "2023 % Health expenditure on GDP",
ylab = "Expenditure (% GDP)", xlab = "Year")
forecast_2023$mean
df_italia <- df %>%
filter(Country.Name == "Italy", !is.na(Expenditure)) %>%
arrange(Year)
# Create time series
serie_ts <- ts(df_italia$Expenditure,
start = df_italia$Year[1],
frequency = 2)  # it should be 1, but the minimum is 2
stl_italia <- stl(serie_ts, s.window = "periodic")
# Plot
plot(stl_italia, main = "STL Decomposition - Health Expenditure (Italy)")
