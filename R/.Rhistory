df_top10 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:10)
ggplot(df_top10, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Country % Health Expenditure on GDP" (2015)",
x = "Country",
ggplot(df_top10, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
ggplot(df_top10, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_top10 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top10, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
ggplot(df, aes(x = Expenditure)) +
geom_histogram(bins = 30, fill = "skyblue") +
labs(title = "Distribuzione della spesa pubblica")
ggplot(df, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "skyblue") +
labs(title = "Distribuzione della spesa pubblica")
#Statistics
ggplot(df, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "skyblue") +
labs(title = "Distribution of health expenditure")
#Statistics
ggplot(df, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Media
median(df_2015$Expenditure, na.rm = TRUE)  # Mediana
var(df_2015$Expenditure, na.rm = TRUE)     # Varianza
sd(df_2015$Expenditure, na.rm = TRUE)      # Deviazione standard (opzionale)
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
library(dplyr)
library(ggplot2)
library(tidyverse)
library(zoo)
install.packages(zoo)
# Step 1: Trasformare in formato wide
df_wide <- df %>%
pivot_wider(names_from= year, values_from =expenditure)
# Step 1: Trasformare in formato wide
df_wide <- df %>%
pivot_wider(names_from= Year, values_from =Expenditure)
# Step 2: Rimuovere le righe con dati mancanti (NA)
df_wide <- df_wide %>%
drop_na()
# Step 3: Standardizzare i dati (usiamo solo scale())
df_scaled <- scale(df_wide[,-1])  # Escludiamo la colonna 'country' dalla standardizzazione
# Step 4: Applicare K-means
set.seed(123)  # Per ripetibilità dei risultati
k_result <- kmeans(df_scaled, centers = 3, nstart = 25)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
# Step 1: Trasformare in formato wide
df_wide <- df %>%
pivot_wider(names_from= Year, values_from =Expenditure)
# Step 2: Rimuovere le righe con dati mancanti (NA)
df_wide <- df_wide %>%
drop_na()
# Step 3: Standardizzare i dati (usiamo solo scale())
df_scaled <- scale(df_wide[,-1])  # Escludiamo la colonna 'country' dalla standardizzazione
# Step 4: Applicare K-means
set.seed(123)  # Per ripetibilità dei risultati
k_result <- kmeans(df_scaled, centers = 2, nstart = 25)  # Usa un numero inferiore di cluster
View(df_wide)
View(df_wide)
# Assicurati che i dati siano privi di NA e duplicati
df <- df %>%
drop_na(Expenditure, Year, Country) %>%
distinct(Country, Year, .keep_all = TRUE)
# Assicurati che i dati siano privi di NA e duplicati
df <- df %>%
drop_na(Expenditure, Year, Country.Name) %>%
distinct(Country, Year, .keep_all = TRUE)
# Assicurati che i dati siano privi di NA e duplicati
df <- df %>%
drop_na(Expenditure, Year, Country.Name) %>%
distinct(Country.Name, Year, .keep_all = TRUE)
# Trasformazione in formato wide
df_wide <- df %>%
pivot_wider(names_from = Year, values_from = Expenditure)
# Verifica il risultato
head(df_wide)  # Mostra le prime righe del dataframe wide
View(df_wide)
# Assicurati che i dati siano privi di NA e duplicati
df <- df %>%
drop_na(Expenditure, Year, Country.Name) %>%
distinct(Country.Name, Year)
# Trasformazione in formato wide
df_wide <- df %>%
pivot_wider(names_from = Year, values_from = Expenditure)
df_wide <- df %>%
pivot_wider(names_from = Year, values_from = Expenditure)
install.packages(zoo)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(zoo)
install.packages(zoo)
library(dplyr)
library(ggplot2)
library(tidyverse)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
df_wide <- df %>%
pivot_wider(names_from = Year, values_from = Expenditure)
head(df_wide)  # Verifica se ora la trasformazione funziona correttamente
View(df_wide)
df_wide <- df %>%
pivot_wider(names_from = Year, values_from = Expenditure)
df_wide <- df_wide %>%
drop_na()  # Rimuovi NA
head(df_wide)  # Verifica se ora la trasformazione funziona correttamente
install.packages(zoo)
library(dplyr)
library(ggplot2)
library(tidyverse)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
df_wide <- df %>%
pivot_wider(names_from = Year, values_from = Expenditure)
head(df_wide)  # Verifica se ora la trasformazione funziona correttamente
library(dplyr)
library(ggplot2)
library(tidyverse)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
# Passaggio 1: Raggruppa i dati per 'Country' e 'Year' e aggrega (calcolando la media)
df_aggregated <- df %>%
group_by(Country, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
# Passaggio 1: Raggruppa i dati per 'Country' e 'Year' e aggrega (calcolando la media)
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
# Passaggio 2: Trasformazione in formato wide (ogni anno diventa una colonna)
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
# Passaggio 3: Visualizza il risultato
head(df_wide)  # Mostra le prime righe del dataframe wide
View(df_wide)
# Step 1: Rimuovere la colonna Country dal dataframe wide
df_wide_no_country <- df_wide %>%
select(-Country)
# Step 1: Rimuovere la colonna Country dal dataframe wide
df_wide_no_country <- df_wide %>%
select(-Country.Name)
# Step 2: Normalizzare i dati (escludendo la colonna Country)
df_normalized <- scale(df_wide_no_country)
View(df_wide_no_country)
rm(df_wide_no_country)
# Step 1: Imposta Country come rownames
df_wide_indexed <- df_wide
rownames(df_wide_indexed) <- df_wide_indexed$Country
# Step 2: Rimuovi la colonna Country (ora che è diventata indice)
df_wide_indexed <- df_wide_indexed %>% select(-Country.Name)
# Step 3: Normalizza i dati
df_normalized <- scale(df_wide_indexed)
# Step 1: Imposta Country come rownames
df_wide_indexed <- df_wide
rownames(df_wide_indexed) <- df_wide_indexed$Country.Name
# Step 2: Rimuovi la colonna Country (ora che è diventata indice)
df_wide_indexed <- df_wide_indexed %>% select(-Country.Name)
# Step 3: Normalizza i dati
df_normalized <- scale(df_wide_indexed)
View(df_wide_indexed)
library(dplyr)
library(ggplot2)
library(tidyverse)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
# Passaggio 1: Raggruppa i dati per 'Country' e 'Year' e aggrega (calcolando la media)
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
# Passaggio 2: Trasformazione in formato wide (ogni anno diventa una colonna)
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
# Passaggio 3: Visualizza il risultato
head(df_wide)  # Mostra le prime righe del dataframe wide
# Step 1: Imposta Country come rownames
df_wide_indexed <- df_wide
rownames(df_wide_indexed) <- df_wide_indexed$Country.Name
# Step 3: Normalizza i dati
df_normalized <- scale(df_wide_indexed)
View(df_wide_indexed)
df_wide_indexed <- df_wide_indexed %>% select(-Country.Name)
View(df_wide_indexed)
set.seed(123)
k_result <- kmeans(df_normalized, centers = 3, nstart = 25)
# Aggiungi il cluster come colonna al dataframe originale
df_wide$cluster <- k_result$cluster[match(rownames(df_wide_indexed), rownames(df_normalized))]
View(k_result)
ggplot(df_pca, aes(x = PC1, y = PC2, color = cluster, label = country)) +
geom_point(size = 3, alpha = 0.8) +
geom_text(size = 3, vjust = -0.5) +
labs(title = "Cluster dei paesi sulla spesa sanitaria (% PIL)",
subtitle = "PCA su dati normalizzati dal 2000 in poi",
x = "Componente Principale 1 (PC1)",
y = "Componente Principale 2 (PC2)") +
theme_minimal() +
theme(legend.position = "bottom")
# Step 1: PCA sui dati normalizzati
pca_result <- prcomp(df_normalized)
# Step 2: Costruisci un dataframe con le prime due componenti principali
df_pca <- as.data.frame(pca_result$x[, 1:2])  # Solo PC1 e PC2
df_pca$country <- rownames(df_normalized)     # Aggiungi i nomi dei paesi
df_pca$cluster <- as.factor(k_result$cluster) # Aggiungi il cluster
# Step 3: Visualizzazione con ggplot2
library(ggplot2)
ggplot(df_pca, aes(x = PC1, y = PC2, color = cluster, label = country)) +
geom_point(size = 3, alpha = 0.8) +
geom_text(size = 3, vjust = -0.5) +
labs(title = "Cluster dei paesi sulla spesa sanitaria (% PIL)",
subtitle = "PCA su dati normalizzati dal 2000 in poi",
x = "Componente Principale 1 (PC1)",
y = "Componente Principale 2 (PC2)") +
theme_minimal() +
theme(legend.position = "bottom")
View(pca_result)
library(dplyr)
library(ggplot2)
library(tidyverse)
df <- read.csv("../Dataset/expenditure_cleaned.csv")
head(df)
df_2015 <- df %>%
filter(Year %in% c("2015"))
country_labels <- ifelse(seq_along(df_2015$Country.Name) %% 5 == 0, df_2015$Country.Name, "")
ggplot(df_2015, aes(x = Country.Name, y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
scale_x_discrete(labels = country_labels) +
labs(title = "Health Expenditure (% of GDP) 2015",
x = "Country",
y = "% Health Expenditure on GDP") +
theme_minimal()
df_top20 <- df_2015 %>%
arrange(desc(Expenditure)) %>%
slice(1:20)
ggplot(df_top20, aes(x = reorder(Country.Name, Expenditure), y = Expenditure)) +
geom_col(fill = "steelblue") +
coord_flip() +
labs(title = "Top 20 Country % Health Expenditure on GDP 2015",
x = "Country",
y = "% Health Expenditure on GDP 2015") +
theme_minimal()
df_FranceItaly <- df %>%
filter(Country.Name %in% c("France", "Italy"))
# Health Expenditure France vs Italy (% of GDP)
ggplot(df_FranceItaly, aes(x = Year, y = Expenditure, color = Country.Name)) +
geom_line(linewidth = 1) +
theme_minimal() +
labs(title = "Health Expenditure France vs Italy (% of GDP)",
x = "Year", y = "Expenditure (% of GDP)",
color = "Country") +
scale_color_manual(values = c("blue", "red"))
#Statistics
ggplot(df_2015, aes(x = Expenditure)) +
geom_histogram(bins = 20, fill = "steelblue") +
labs(title = "Distribution of health expenditure %")
mean(df_2015$Expenditure, na.rm = TRUE)    # Mean
median(df_2015$Expenditure, na.rm = TRUE)  # Median
var(df_2015$Expenditure, na.rm = TRUE)     # Variance
sd(df_2015$Expenditure, na.rm = TRUE)      # Standard Deviation
# Passaggio 1: Raggruppa i dati per 'Country' e 'Year' e aggrega (calcolando la media)
df_aggregated <- df %>%
group_by(Country.Name, Year) %>%
summarise(Expenditure = mean(Expenditure, na.rm = TRUE), .groups = 'drop')  # Aggrega i dati per paese e anno
# Passaggio 2: Trasformazione in formato wide (ogni anno diventa una colonna)
df_wide <- df_aggregated %>%
pivot_wider(names_from = Year, values_from = Expenditure)
# Passaggio 3: Visualizza il risultato
head(df_wide)  # Mostra le prime righe del dataframe wide
rm(normalized)
rm(df_normalized)
rm(df_pca)
rm(df_scaled)
rm(k_result)
rm(pca_result)
rm(df_top10)
View(df_wide_indexed)
